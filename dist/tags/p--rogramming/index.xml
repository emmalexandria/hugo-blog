<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>P  Rogramming on Emma Alexandria&#39;s Blog</title>
    <link>http://localhost:1313/hugo-blog/tags/p--rogramming/</link>
    <description>Recent content in P  Rogramming on Emma Alexandria&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Â© Emma Alexandria</copyright>
    <lastBuildDate>Sat, 23 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/hugo-blog/tags/p--rogramming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust is nice at programming</title>
      <link>http://localhost:1313/hugo-blog/posts/rust-nice-bits/</link>
      <pubDate>Sat, 23 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/hugo-blog/posts/rust-nice-bits/</guid>
      <description>&lt;p&gt;Rust is a language which is evangelised primarily for it&amp;rsquo;s safety. I&amp;rsquo;m going to be real here. I like writing safe programs, but I don&amp;rsquo;t really care that much. I was never a C or C++ developer. I did follow &lt;a href=&#34;https://www.youtube.com/@javidx9&#34;&gt;javid9x&amp;rsquo;s fantastic tutorials&lt;/a&gt; when I was younger, but my only real attempt to build something complex in either language was a sudoku solver which never worked because my code for drawing the board kept segfaulting. However, I still really like and appreciate Rust. If you aren&amp;rsquo;t a developer with a particular care for memory safety, I want to try and convince you that Rust is still worth it and a great language to learn. There may sometimes be gaps between the part of the article where code is shown and where it&amp;rsquo;s explained. This article is also very code heavy, so be ready.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
